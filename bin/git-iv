#!/usr/bin/env perl

# Plugin de IV para facilitar algunas cosas en la asignatura.
# Instalación:
# Prerrequisitos: Perl y git instalados (Perl estará instalado en cualquier Linux o Mac)
# > cd ~/bin # O cualquier otro directorio en el path de ejecución
# > wget https://raw.githubusercontent.com/JJ/git-iv/refs/heads/main/bin/git-iv # O bajar el URL a ese directorio de cualquier otra manera
# > chmod +x git-iv
# Ya se puede usar a continuación. Por ejemplo
# > git iv # Para imprimir los subcomandos

use strict;
use warnings;
use lib qw( /Library/Developer/CommandLineTools/usr/share/git-core/perl
            /usr/share/perl5 );
use Git;

use v5.14;

my $HELP_FLAG = "-h";
my $USAGE_STRING = <<EOC;
Uso:
    git iv objetivo <número> -- crea una rama para ese objetivo
    git iv sube-objetivo     -- sube al repo remoto la rama

    git iv $HELP_FLAG -- imprime este mensaje
EOC


my @subcommands = qw(objetivo sube-objetivo);
push( @subcommands, quotemeta $HELP_FLAG);

die( usage_string() ) unless @ARGV;
my $subcommand = shift;

die "No se reconoce el subcomando $subcommand" unless grep( /\Q$subcommand/, @subcommands );

if ( $subcommand eq $HELP_FLAG ) {
  say $USAGE_STRING;
} else {

  my $repo;

  eval {
    $repo = Git->repository;
  } or die "Aparentemente, no estás en un repositorio";

  if ( $subcommand eq "objetivo" ) {
    die $USAGE_STRING unless @ARGV;
    my $numero_objetivo = shift;
    $repo->command( "checkout", "-b", "Objetivo-" . $numero_objetivo);
  }

  if ( $subcommand eq "sube-objetivo" ) {
    my $branch = $repo->command( "rev-parse", "--abbrev-ref", "HEAD" );
    chomp($branch);
    $repo->command ( "push", "-u", "origin", $branch );
  }
}


# Local Variables:
# mode: cperl
# End:
